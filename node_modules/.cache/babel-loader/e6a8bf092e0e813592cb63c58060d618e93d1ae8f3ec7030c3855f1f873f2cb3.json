{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cx417\\\\Desktop\\\\Authentication\\\\inotebook\\\\src\\\\context\\\\notes\\\\noteState.js\",\n  _s = $RefreshSig$();\nimport NoteContext from \"./noteContext\"; // Importing the NoteContext from \"./noteContext\"\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  // Defining a functional component called NoteState which takes props\n  const host = \"http://localhost:5000\";\n  const notesInitial = [{\n    _id: \"65094c474a47126b828747cc\",\n    user: \"6501c4e35a545427722d3ab3\",\n    title: \"Here is my title for my notes to be published\",\n    tags: \"personal\",\n    description: \"my description is here to be continued her is the functionality\",\n    date: \"2023-09-19T07:22:47.883Z\",\n    __v: 0\n  }, {\n    _id: \"65094c484a47126b828747ce\",\n    user: \"6501c4e35a545427722d3ab3\",\n    title: \"Here is my title for my notes to be published\",\n    tags: \"personal\",\n    description: \"my description is here to be continued her is the functionality\",\n    date: \"2023-09-19T07:22:48.510Z\",\n    __v: 0\n  }, {\n    _id: \"65094c494a47126b828747d0\",\n    user: \"6501c4e35a545427722d3ab3\",\n    title: \"Here is my title for my notes to be published\",\n    tags: \"personal\",\n    description: \"my description is here to be continued her is the functionality\",\n    date: \"2023-09-19T07:22:49.177Z\",\n    __v: 0\n  }, {\n    _id: \"65094c494a47126b8287547d0\",\n    user: \"6501c4e35a545427722d3ab3\",\n    title: \"Here is my title for my notes to be published\",\n    tags: \"personal\",\n    description: \"my description is here to be continued her is the functionality\",\n    date: \"2023-09-19T07:22:49.177Z\",\n    __v: 0\n  }, {\n    _id: \"65094c494a471265b828747d0\",\n    user: \"6501c4e35a545427722d3ab3\",\n    title: \"Here is my title for my notes to be published\",\n    tags: \"personal\",\n    description: \"my description is here to be continued her is the functionality\",\n    date: \"2023-09-19T07:22:49.177Z\",\n    __v: 0\n  }, {\n    _id: \"65094c494a471426b828747d0\",\n    user: \"6501c4e35a545427722d3ab3\",\n    title: \"Here is my title for my notes to be published\",\n    tags: \"personal\",\n    description: \"my description is here to be continued her is the functionality\",\n    date: \"2023-09-19T07:22:49.177Z\",\n    __v: 0\n  }, {\n    _id: \"65094c494a47126b4828747d0\",\n    user: \"6501c4e35a545427722d3ab3\",\n    title: \"Here is my title for my notes to be published\",\n    tags: \"personal\",\n    description: \"my description is here to be continued her is the functionality\",\n    date: \"2023-09-19T07:22:49.177Z\",\n    __v: 0\n  }];\n  const [notes, setNotes] = useState(notesInitial); //\n\n  // edit notes\n\n  const addNotes = async (title, description, tags) => {\n    const response = await fetch(`${host}api/notes/addNotes`, {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjUwMWM0ZTM1YTU0NTQyNzcyMmQzYWIzIn0sImlhdCI6MTY5NTA0NDk4NH0.wTMS84uz0KDOtDcGbf3R4HB3wlIEQPIBP3BeC-s0CH8\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tags\n      })\n    });\n    const note = {\n      _id: \"65094c494a47126b4828747d50\",\n      user: \"6501c4e35a545427722d3aeb3\",\n      title: title,\n      tags: tags,\n      description: description,\n      date: \"2023-09-19T07:22:49.177Z\",\n      __v: 0\n    };\n    setNotes(notes.concat(note));\n  };\n\n  // add new notes\n\n  //API calls\n\n  // logic for editing notes on the client side.\n  const editNote = async (id, title, description, tags) => {\n    const response = await fetch(`${host}api/notes/updatenote/${id}`, {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjUwMWM0ZTM1YTU0NTQyNzcyMmQzYWIzIn0sImlhdCI6MTY5NTA0NDk4NH0.wTMS84uz0KDOtDcGbf3R4HB3wlIEQPIBP3BeC-s0CH8\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tags\n      })\n    });\n    return response.json();\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tags = tags;\n      }\n    }\n  };\n\n  // delete old notes\n  // Define a function called \"deleteNote\" that takes an \"id\" parameter.\n  const deleteNote = id => {\n    // Log a message to the console indicating the deletion of a note with the provided \"id.\"\n    console.log(\"deleting the note with id \" + id);\n\n    // Create a new array called \"newNote\" by filtering the \"notes\" array to remove items with a matching \"_id.\"\n    const newNote = notes.filter(note => {\n      return note._id !== id;\n    });\n\n    // Update the \"notes\" array with the newly filtered \"newNote\" array.\n    setNotes(newNote);\n  };\n  return (\n    /*#__PURE__*/\n    // Returning the NoteContext.Provider with a value containing the 'state' and 'update' function\n    _jsxDEV(NoteContext.Provider, {\n      value: {\n        notes,\n        editNote,\n        addNotes,\n        deleteNote\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState; // Exporting the NoteState component as the default export\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["NoteContext","useState","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","_id","user","title","tags","description","date","__v","notes","setNotes","addNotes","response","fetch","method","headers","body","JSON","stringify","note","concat","editNote","id","json","index","length","element","deleteNote","console","log","newNote","filter","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cx417/Desktop/Authentication/inotebook/src/context/notes/noteState.js"],"sourcesContent":["import NoteContext from \"./noteContext\"; // Importing the NoteContext from \"./noteContext\"\r\nimport { useState } from \"react\";\r\n\r\nconst NoteState = (props) => {\r\n  // Defining a functional component called NoteState which takes props\r\n  const host = \"http://localhost:5000\";\r\n  const notesInitial = [\r\n    {\r\n      _id: \"65094c474a47126b828747cc\",\r\n      user: \"6501c4e35a545427722d3ab3\",\r\n      title: \"Here is my title for my notes to be published\",\r\n      tags: \"personal\",\r\n      description:\r\n        \"my description is here to be continued her is the functionality\",\r\n      date: \"2023-09-19T07:22:47.883Z\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      _id: \"65094c484a47126b828747ce\",\r\n      user: \"6501c4e35a545427722d3ab3\",\r\n      title: \"Here is my title for my notes to be published\",\r\n      tags: \"personal\",\r\n      description:\r\n        \"my description is here to be continued her is the functionality\",\r\n      date: \"2023-09-19T07:22:48.510Z\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      _id: \"65094c494a47126b828747d0\",\r\n      user: \"6501c4e35a545427722d3ab3\",\r\n      title: \"Here is my title for my notes to be published\",\r\n      tags: \"personal\",\r\n      description:\r\n        \"my description is here to be continued her is the functionality\",\r\n      date: \"2023-09-19T07:22:49.177Z\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      _id: \"65094c494a47126b8287547d0\",\r\n      user: \"6501c4e35a545427722d3ab3\",\r\n      title: \"Here is my title for my notes to be published\",\r\n      tags: \"personal\",\r\n      description:\r\n        \"my description is here to be continued her is the functionality\",\r\n      date: \"2023-09-19T07:22:49.177Z\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      _id: \"65094c494a471265b828747d0\",\r\n      user: \"6501c4e35a545427722d3ab3\",\r\n      title: \"Here is my title for my notes to be published\",\r\n      tags: \"personal\",\r\n      description:\r\n        \"my description is here to be continued her is the functionality\",\r\n      date: \"2023-09-19T07:22:49.177Z\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      _id: \"65094c494a471426b828747d0\",\r\n      user: \"6501c4e35a545427722d3ab3\",\r\n      title: \"Here is my title for my notes to be published\",\r\n      tags: \"personal\",\r\n      description:\r\n        \"my description is here to be continued her is the functionality\",\r\n      date: \"2023-09-19T07:22:49.177Z\",\r\n      __v: 0,\r\n    },\r\n    {\r\n      _id: \"65094c494a47126b4828747d0\",\r\n      user: \"6501c4e35a545427722d3ab3\",\r\n      title: \"Here is my title for my notes to be published\",\r\n      tags: \"personal\",\r\n      description:\r\n        \"my description is here to be continued her is the functionality\",\r\n      date: \"2023-09-19T07:22:49.177Z\",\r\n      __v: 0,\r\n    },\r\n  ];\r\n  const [notes, setNotes] = useState(notesInitial); //\r\n\r\n  // edit notes\r\n\r\n  const addNotes = async (title, description, tags) => {\r\n\r\n    const response = await fetch(`${host}api/notes/addNotes`, {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjUwMWM0ZTM1YTU0NTQyNzcyMmQzYWIzIn0sImlhdCI6MTY5NTA0NDk4NH0.wTMS84uz0KDOtDcGbf3R4HB3wlIEQPIBP3BeC-s0CH8\"\r\n      },\r\n      body: JSON.stringify({title, description, tags}),\r\n    });\r\n\r\n    const note = {\r\n      _id: \"65094c494a47126b4828747d50\",\r\n      user: \"6501c4e35a545427722d3aeb3\",\r\n      title: title,\r\n      tags: tags,\r\n      description:\r\n        description,\r\n      date: \"2023-09-19T07:22:49.177Z\",\r\n      __v: 0,\r\n    }\r\n    setNotes(notes.concat(note))\r\n  };\r\n\r\n  // add new notes\r\n\r\n  //API calls\r\n\r\n\r\n  // logic for editing notes on the client side.\r\n  const editNote = async (id, title, description, tags) => {\r\n   \r\n  const response = await fetch(`${host}api/notes/updatenote/${id}`, {\r\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjUwMWM0ZTM1YTU0NTQyNzcyMmQzYWIzIn0sImlhdCI6MTY5NTA0NDk4NH0.wTMS84uz0KDOtDcGbf3R4HB3wlIEQPIBP3BeC-s0CH8\"\r\n    },\r\n    body: JSON.stringify({title, description, tags}),\r\n  });\r\n  return response.json(); \r\n    for (let index = 0; index < notes.length; index++) {\r\n      const element = notes[index];\r\n      if(element._id === id) {\r\n        element.title = title;\r\n        element.description = description;\r\n        element.tags = tags;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n  // delete old notes\r\n  // Define a function called \"deleteNote\" that takes an \"id\" parameter.\r\nconst deleteNote = (id) => {\r\n  // Log a message to the console indicating the deletion of a note with the provided \"id.\"\r\n  console.log(\"deleting the note with id \" + id)\r\n\r\n  // Create a new array called \"newNote\" by filtering the \"notes\" array to remove items with a matching \"_id.\"\r\n  const newNote = notes.filter((note) => {\r\n      return note._id !== id;\r\n  })\r\n\r\n  // Update the \"notes\" array with the newly filtered \"newNote\" array.\r\n  setNotes(newNote);\r\n}\r\n\r\n\r\n  return (\r\n    // Returning the NoteContext.Provider with a value containing the 'state' and 'update' function\r\n    <NoteContext.Provider value={{ notes, editNote, addNotes, deleteNote }}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteState; // Exporting the NoteState component as the default export"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}